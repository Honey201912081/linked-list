
int getNthFromLast(Node *head, int n)
{
       // Your code here
       Node* x=head;
       int cnt=0;
       while(x!=NULL)
       {
           x=x->next;
           cnt++;
       }
       if(n>cnt)
            return -1;
        int move=cnt-n;
        for(int i=0;i<move;i++)
        {
            head=head->next;
        }
        return head->data;
        
}
======================================================solution 2========================
#include<stack>
int getNthFromLast(Node *head, int n)
{
       // Your code here
       if(head==NULL)
        return -1;
       stack<int> st;
       int c=0;
       while(head->next!=NULL && head!=NULL)
       {
           st.push(head->data);
           c++;
           head=head->next;
       }
       st.push(head->data);
       c++;
       if(c<n)
        return -1;
       int t=1;
       while(t<=n)
       {
          if(t==n)
           {
               return st.top();
           } 
           else{
               st.pop();
               ++t;
           }
       }
}
